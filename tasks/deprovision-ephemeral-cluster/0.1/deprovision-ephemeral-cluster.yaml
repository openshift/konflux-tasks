apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: deprovision-ephemeral-cluster
spec:
  description: >-
    Deprovision an ephemeral cluster within the Test Platform (OpenShift CI) infrastructure.
  params:
  - name: testPlatformClusterClaimName
    type: string
    description: >-
      Name of the TestPlatformCluster Claim that was used to request an ephemeral cluster
  - name: testPlatformClusterClaimNamespace
    type: string
    description: >-
      Namespace of the TestPlatformCluster Claim that was used to request an ephemeral cluster
  - name: timeout
    type: string
    default: 2h
    description: "Wait for the ephemeral cluster to be deprovisioned until this timeout is reached"
  steps:
  - name: deprovision-ephemeral-cluster
    image: quay.io/konflux-ci/konflux-test:v1.4.31@sha256:a7cae9e96663e277a3904d0c78630508ddb6cc8eebaa912a840bd20f68dcaad1
    env:
    - name: CLAIM_NAME
      value: $(params.testPlatformClusterClaimName)
    - name: NAMESPACE
      value: $(params.testPlatformClusterClaimNamespace)
    - name: CLUSTER_DEPROVISIONING_TIMEOUT
      value: $(params.timeout)
    script: |
      #!/bin/bash
      set -eo pipefail

      cat >deprovision-patch.json <<EOF
      [{
          "op": "add",
          "path": "/spec/tearDownCluster",
          "value": true
      }]
      EOF

      oc -n "$NAMESPACE" patch testplatformclusters.ci.openshift.org "$CLAIM_NAME" --type=json --patch-file=deprovision-patch.json

      if oc -n "$NAMESPACE" wait testplatformclusters.ci.openshift.org "$CLAIM_NAME" --for=condition=ProwJobCompleted=true --timeout="$CLUSTER_DEPROVISIONING_TIMEOUT"; then
        echo 'The cluster has been properly deprovisioned'
      else
        echo "Error: failed to deprovision the cluster"
        exit 1
      fi
